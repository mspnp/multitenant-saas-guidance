@model SurveyDTO
@{
    ViewData["Title"] = "Edit Survey";
}
<h2>@ViewData["Title"]</h2>

<div class="list-group container">
    <form asp-action="EditTitle" method="post" asp-route-id="@Model.Id" class="form-horizontal" role="form">
        <div class="list-group-item">
            <div asp-validation-summary="ValidationSummary.ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Id" type="hidden" />
                <span asp-validation-for="Id" class="text-danger"></span>
                <input asp-for="Title" type="hidden" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="row">
                <label class="col-md-1">
                    @Html.DisplayNameFor(model => model.Title)
                </label>

                <div class="col-md-11">
                    <span>
                        @Html.DisplayFor(model => model.Title)
                    </span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="pull-right">
                    <input type="submit" class="btn btn-default" value="Edit Title" />
                </div>
            </div>
        </div>
    </form>


    <h2>@Html.DisplayNameFor(model => model.Questions)</h2>
    @foreach (var item in Model.Questions)
    {
        <div class="list-group-item">
            <div class="row">
                <label class="col-md-1">
                    @Html.DisplayNameFor(modelItem => item.Text)
                </label>
                <div class="col-md-11">
                    @Html.DisplayFor(modelItem => item.Text)
                </div>
            </div>
            <div class="row">
                <label class="col-md-1">
                    @Html.DisplayNameFor(modelItem => item.Type)
                </label>
                <div class="col-md-11">
                    @Html.DisplayFor(modelItem => item.Type)
                </div>
            </div>
            @if (item.Type == QuestionType.MultipleChoice)
            {
                <div class="row">
                    <label class="col-md-1">
                        @Html.DisplayNameFor(modelItem => item.PossibleAnswers)
                    </label>
                    <div class="col-md-11">
                        <textarea rows="5" readonly>@Html.DisplayFor(modelItem => item.PossibleAnswers)</textarea>
                    </div>
                </div>
            }
            <div class="row">
                <div class="col-md-12">
                    <div class="pull-right">
                        <a asp-controller="Question" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-default">Edit</a>
                        <a asp-controller="Question" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-default">Delete</a>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-md-12">
            <div class="pull-right">
                <a asp-controller="Question" asp-action="Create" asp-route-id="@Model.Id" class="btn btn-default">Add Question</a>
            </div>
        </div>
    </div>
</div>
